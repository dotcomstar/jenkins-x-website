<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes â€“ Guides</title>
    <link>https://jenkins-x.io/v3/admin/guides/</link>
    <description>Recent content in Guides on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jenkins-x.io/v3/admin/guides/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>V3: Kubernetes upgrades</title>
      <link>https://jenkins-x.io/v3/admin/guides/k8s-upgrades/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/guides/k8s-upgrades/</guid>
      <description>
        
        
        &lt;p&gt;Upgrading your Kubernetes cluster is one of the tasks you must take on as an operator of Jenkins X. Kubernetes comes out with &lt;a href=&#34;https://kubernetes.io/releases/&#34;&gt;new releases&lt;/a&gt; regularly, and will only maintain releases for the three latest versions. Meaning if something breaks, or there is a security issue on an older version, Kubernetes will not fix it, but ask you to upgrade. All the major cloud providers only support a given set of latest versions.&lt;/p&gt;
&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
  Jenkins X supports the Kubernetes versions 1.23-1.30.
&lt;/div&gt;

&lt;h2 id=&#34;upgrade-procedure&#34;&gt;Upgrade procedure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It is highly recommended to test upgrades on a separate cluster, where you have all the same setup as you use in production.&lt;/li&gt;
&lt;li&gt;Run &lt;a href=&#34;https://github.com/FairwindsOps/pluto&#34;&gt;Pluto&lt;/a&gt; to find any deprecated CRDs present in your cluster. You can run Pluto both on the cluster using &lt;code&gt;pluto detect-helm&lt;/code&gt;, and on the files on your cluster repo using &lt;code&gt;pluto detect-files&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Cross-check the list of deprecations you find, with the list from &lt;a href=&#34;https://kubernetes.io/docs/reference/using-api/deprecation-guide/&#34;&gt;Kubernetes&lt;/a&gt; and see what is required for the Kubernetes version you want to upgrade to.&lt;/li&gt;
&lt;li&gt;Fix what needs to be fixed, and deploy the changes.&lt;/li&gt;
&lt;li&gt;You may now start the upgrade of Kubernetes.
&lt;ul&gt;
&lt;li&gt;The process has two steps, first, you need to upgrade the control plane, and next upgrade the nodes.
Follow the upgrade steps according to your cloud provider. - &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/update-cluster.html&#34;&gt;Amazon&lt;/a&gt; - &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/aks/upgrade-cluster?tabs=azure-cli&#34;&gt;Azure&lt;/a&gt; - &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/how-to/upgrading-a-cluster&#34;&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pour yourself a cup of your favorite drink while you sit back and wait for the magic to happen.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Cluster Recovery</title>
      <link>https://jenkins-x.io/v3/admin/guides/cluster-recovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/guides/cluster-recovery/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>V3: Migrate</title>
      <link>https://jenkins-x.io/v3/admin/guides/migrate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/guides/migrate/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>V3: Multi-Cluster</title>
      <link>https://jenkins-x.io/v3/admin/guides/multi-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/guides/multi-cluster/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>V3: Lighthouse WebUI</title>
      <link>https://jenkins-x.io/v3/admin/guides/lighthouse-webui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/guides/lighthouse-webui/</guid>
      <description>
        
        
        &lt;p&gt;This guide will help you install and configure the &lt;a href=&#34;https://github.com/jenkins-x-plugins/lighthouse-webui-plugin&#34;&gt;lighthouse-webui-plugin&lt;/a&gt; in your Jenkins X cluster. You can see the &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/lighthouse/&#34;&gt;Lighthouse Web UI documentation&lt;/a&gt; for more details on why you might need to install this optional component.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Please follow the usual &lt;a href=&#34;https://jenkins-x.io/v3/admin/platform/&#34;&gt;getting started guide for boot and helm 3&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;Then, open the &lt;code&gt;helmfiles/jx/helmfile.yaml&lt;/code&gt; file located in your development environment git repository, and add the following content under the &lt;code&gt;releases&lt;/code&gt; section:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jxgh/lighthouse-webui-plugin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;lighthouse-webui-plugin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should have something like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;namespace&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jx&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;repositories&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#ae81ff&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;releases&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jxgh/lighthouse-webui-plugin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;lighthouse-webui-plugin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Don&amp;rsquo;t worry if your new chart doesn&amp;rsquo;t have a &lt;code&gt;version&lt;/code&gt; field, or a list of &lt;code&gt;values&lt;/code&gt; files: these fields will be automatically added later.&lt;/p&gt;
&lt;p&gt;Commit and push these changes, and after a few minutes you should see a new &lt;code&gt;lighthouse-webui-plugin&lt;/code&gt; pod running in the &lt;code&gt;jx&lt;/code&gt; namespace:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl get pod -n jx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                                           READY   STATUS    RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lighthouse-webui-plugin-696b8c85f9-99hnn       1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          31m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;p&gt;See the &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/lighthouse/&#34;&gt;Lighthouse Web UI documentation&lt;/a&gt; for how to access it and use it.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The configuration is defined in a &lt;a href=&#34;https://github.com/jenkins-x/jx3-versions/blob/master/charts/jxgh/lighthouse-webui-plugin/values.yaml.gotmpl&#34;&gt;&amp;ldquo;values file&amp;rdquo; stored in the Jenkins X Version Stream&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to change anything from the default configuration, you can either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;submit a Pull Request if you believe this change is beneficial for everybody&lt;/li&gt;
&lt;li&gt;or create a new values file in your development environment git repositor: &lt;code&gt;values/lighthouse-webui-plugin/values.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to change the default basic auth to OAuth for example, you can read the &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/ingress/oauth/&#34;&gt;OAuth guide&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Observability</title>
      <link>https://jenkins-x.io/v3/admin/guides/observability/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/guides/observability/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>V3: Preview Environments</title>
      <link>https://jenkins-x.io/v3/admin/guides/preview-environments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/guides/preview-environments/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/preview/&#34;&gt;Preview environments&lt;/a&gt; are temporary environments created automatically by Jenkins X for each Pull Request.&lt;/p&gt;
&lt;p&gt;This is very nice, but if you start adding applications to your Jenkins X cluster, and each application repository has a few opened Pull Requests - each with a preview environment including a few dependencies - then you&amp;rsquo;ll quickly get tens of preview environments and a lot more running pods. But these pods are usually only used to run the integration tests in the Pull Request pipelines, or when someone manually visits the preview environment URL. Most of the time, these pods are just idle, waiting and using resources. What if you could easily scale them down when they are idle?&lt;/p&gt;
&lt;p&gt;This guide will help you install &lt;a href=&#34;https://github.com/dailymotion-oss/osiris&#34;&gt;Osiris&lt;/a&gt; in your Jenkins X cluster. Osiris is a Kubernetes component that will inject itself as a proxy in front of your applications, and scale them down when it notices that they are idle for more than a pre-configured period. And if someone wants to access your application, Osiris will receive the request, scale up the application, and forward the request to the application.&lt;/p&gt;
&lt;p&gt;Combined with a cluster autoscaler, Osiris will help you scale down/up your cluster nodes automatically based on your workload.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Please follow the usual &lt;a href=&#34;https://jenkins-x.io/v3/admin/platform/&#34;&gt;getting started guide for boot and helm 3&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;The first step is to edit your main &lt;code&gt;helmfile.yaml&lt;/code&gt; file located in the root directory of your development environment git repository, so that it references the &lt;code&gt;helmfiles/osiris-system/helmfile.yaml&lt;/code&gt; file, such as:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;helmfiles&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;helmfiles/jx/helmfile.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;helmfiles/osiris-system/helmfile.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;helmfiles/tekton-pipelines/helmfile.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The second step is to create the &lt;code&gt;helmfiles/osiris-system/helmfile.yaml&lt;/code&gt; file, with the following content:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;namespace&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;osiris-system&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;releases&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;osiris/osiris&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;osiris&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Commit and push these changes, and after a few minutes you should see a few osiris pods running in the &lt;code&gt;osiris-system&lt;/code&gt; namespace:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl get pod -n osiris-system
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                                           READY   STATUS    RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;osiris-activator-696b8c85f9-99hnn              1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          31m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;osiris-endpoints-controller-67f4877645-k4pxv   1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          31m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;osiris-endpoints-hijacker-686586df7c-72cmx     1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          31m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;osiris-proxy-injector-847f6f46c6-bjjtp         1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          31m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;osiris-zeroscaler-5d757dcb98-kl7ts             1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          31m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;p&gt;Osiris requires specific annotations to be added to your application&amp;rsquo;s Deployment and Service, otherwise, it won&amp;rsquo;t do anything. You can read the &lt;a href=&#34;https://github.com/dailymotion-oss/osiris&#34;&gt;Osiris documentation&lt;/a&gt; to see which annotations you need to add to your resources.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The configuration is defined in a &lt;a href=&#34;https://github.com/jenkins-x/jx3-versions/tree/master/charts/osiris/osiris/values.yaml.gotmpl&#34;&gt;&amp;ldquo;values file&amp;rdquo; stored in the Jenkins X Version Stream&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to change anything from the default configuration, you can either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;submit a Pull Request if you believe this change is beneficial for everybody&lt;/li&gt;
&lt;li&gt;or create a new values file in your development environment git repositor: &lt;code&gt;values/osiris/values.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Progressive Delivery</title>
      <link>https://jenkins-x.io/v3/admin/guides/progressive-delivery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/guides/progressive-delivery/</guid>
      <description>
        
        
        &lt;p&gt;Progressive delivery allows you to gradually rollout new versions of your application to an environment using &lt;em&gt;canaries&lt;/em&gt; and gradually giving traffic to the new version until you are happy to fully rollover to the new version.&lt;/p&gt;
&lt;p&gt;Our recommendation for using progressive delivery with Jenkins X is to use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://flagger.app/&#34;&gt;flagger&lt;/a&gt; as the progressive delivery controller&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/&#34;&gt;istio&lt;/a&gt; as the service mesh to provide advanced load balancing capabilities across internal or external networking&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;configuring-progressive-delivery&#34;&gt;Configuring Progressive Delivery&lt;/h2&gt;
&lt;p&gt;Please follow the usual &lt;a href=&#34;https://jenkins-x.io/v3/admin/platform/&#34;&gt;getting started guide for boot and helm 3&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;add-the-istio-and-flagger-apps&#34;&gt;Add the istio and flagger apps&lt;/h3&gt;
&lt;p&gt;Please make sure your &lt;code&gt;helmfile.yaml&lt;/code&gt; has the necessary apps for using &lt;a href=&#34;https://flagger.app/&#34;&gt;flagger&lt;/a&gt; and &lt;a href=&#34;https://istio.io/&#34;&gt;istio&lt;/a&gt;. Your &lt;code&gt;helmfile.yaml&lt;/code&gt; in your development environment git repository should look something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;releases&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jx-labs/istio&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;flagger/flagger&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;flagger/grafana&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jx-labs/flagger-metrics&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;stable/kuberhealthy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So that you remove &lt;code&gt;stable/nginx-ingress&lt;/code&gt; from your &lt;code&gt;helmfile.yaml&lt;/code&gt; file and ensure the above apps are added at the top of the file.&lt;/p&gt;
&lt;p&gt;Also for now I&amp;rsquo;m afraid you will have to remove the &lt;code&gt;jenkins-x/jxui&lt;/code&gt; chart as its currently not working yet with istio ingress - but we can hopefully get that working soon.&lt;/p&gt;
&lt;h3 id=&#34;enable-istio-based-ingress&#34;&gt;Enable istio based ingress&lt;/h3&gt;
&lt;p&gt;To avoid having 2 &lt;code&gt;LoadBalancer&lt;/code&gt; services for both &lt;code&gt;istio&lt;/code&gt; and &lt;code&gt;nginx&lt;/code&gt; (which costs more money) its easier to switch to pure istio for both internal and external load balancing. This also results in a smaller footprint.&lt;/p&gt;
&lt;p&gt;To do that ensure that &lt;code&gt;kind: istio&lt;/code&gt; is added to the &lt;code&gt;jx-requirements.yml&lt;/code&gt; file in the top level &lt;code&gt;ingress:&lt;/code&gt; section like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;domain&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;istio&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now your development git repository should be setup and be ready. Now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;make sure you have setup &lt;a href=&#34;https://jenkins-x.io/v3/guides/secrets/&#34;&gt;any secrets you need to boot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When it is all complete you should see istio, flagger, grafana pods running in the &lt;code&gt;istio-system&lt;/code&gt; namespace something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl get pod -n istio-system
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                                    READY   STATUS    RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flagger-66dc49cd-g6ptp                  1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          32h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grafana-7d7d7476f6-ff6bm                1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          32h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;istio-ingressgateway-598796f4d9-sq8b7   1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          32h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;istiod-7d9c7bdd6-vjp9j                  1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          32h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kuberhealthy-f54f7f7df-b5gbf            1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;          32h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kuberhealthy-f54f7f7df-j6qwt            1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          32h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prometheus-b47d8c58c-n974m              2/2     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          32h
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From 1.5 onwards istio is pretty small; just 2 pods. Note that those &lt;code&gt;kuberhealthy&lt;/code&gt; pods are optional and just help with reporting.&lt;/p&gt;
&lt;h3 id=&#34;enable-istio-in-stagingproduction&#34;&gt;Enable istio in staging/production&lt;/h3&gt;
&lt;p&gt;If you wish to use a Canary with &lt;a href=&#34;https://flagger.app/&#34;&gt;flagger&lt;/a&gt; and &lt;a href=&#34;https://istio.io/&#34;&gt;istio&lt;/a&gt; in your staging or production namespace you need to make sure you have labelled the namespace correctly to enable istio injection.&lt;/p&gt;
&lt;p&gt;To enable istio in staging:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl label namespace jx-staging istio-injection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;enabled
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To enable istio in production:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl label namespace jx-production istio-injection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;enabled
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;defaulting-to-use-canary&#34;&gt;Defaulting to use Canary&lt;/h3&gt;
&lt;p&gt;Run the following command to default to using canary deployments and horizontal pod autoscaling whenever you &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/first-project/create-quickstart/&#34;&gt;create a new quickstart&lt;/a&gt; or &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/creating/import/&#34;&gt;import a project&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx edit deploy --team --canary --hpa
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will enable all new quickstarts and imported projects to use canary rollouts and use horizontal pod autoscaling in all environments.&lt;/p&gt;
&lt;p&gt;You can switch the defaults back again at any time or configure any app to change its defaults by running &lt;code&gt;jx edit deploy&lt;/code&gt; inside a git clone of an application.&lt;/p&gt;
&lt;h3 id=&#34;enablingdisabling-canaryhpa-in-an-environment&#34;&gt;Enabling/Disabling Canary/HPA in an Environment&lt;/h3&gt;
&lt;p&gt;If you want to enable/disable canary or horizontal pod autoscaling for a specific app in an environment then you can &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#customising-charts&#34;&gt;follow the app customisation approach&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Assuming your app is called &lt;code&gt;myapp&lt;/code&gt; then in the git repository for the environment (e.g. &lt;code&gt;Staging&lt;/code&gt;) you can add/edit a file called &lt;code&gt;apps/mychart/values.yaml&lt;/code&gt; to look like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;canary&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;hpa&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;you can enable/disable those 2 flags for canary releases and horizontal pod autoscaler at any point in any environment.&lt;/p&gt;
&lt;h2 id=&#34;using-progressive-delivery&#34;&gt;Using Progressive Delivery&lt;/h2&gt;
&lt;p&gt;Once you have followed the above steps create a &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/first-project/create-quickstart/&#34;&gt;quickstart application&lt;/a&gt; in the usual way.&lt;/p&gt;
&lt;p&gt;As you merge changes to the master branch of your application Jenkins X will create a new release and &lt;a href=&#34;https://jenkins-x.io/docs/resources/faq/using/#how-does-promotion-actually-work&#34;&gt;promote it to the staging environment&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However if Canary deployment is enabled your new version will gradually be rolled out progressively:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the defaults are that 20% of the traffic will go to the new version&lt;/li&gt;
&lt;li&gt;flagger will keep monitoring the metrics used in the Canary resource to determine if the canary is good&lt;/li&gt;
&lt;li&gt;after the configured time period is over the traffic will be increased to 40% then 60%&lt;/li&gt;
&lt;li&gt;eventually if things look good the new version will fully rollout to 100% traffic&lt;/li&gt;
&lt;li&gt;if anything goes bad during the rollout time period the old version is restored&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is an excellent &lt;a href=&#34;https://youtu.be/7eePqtxW7NM&#34;&gt;video showing this in action&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Spot Instances For Builds</title>
      <link>https://jenkins-x.io/v3/admin/guides/spot-instances/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/guides/spot-instances/</guid>
      <description>
        
        
        &lt;p&gt;Using spot instances for builds is a great way to detach your builds (increasing stablility on your deployed applications) and save money.&lt;/p&gt;
&lt;p&gt;Jenkins X supports a &lt;a href=&#34;https://Tekton.dev/&#34;&gt;Tekton&lt;/a&gt; helm chart that lets configuring spot instances for builds really easy.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s discuss:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Why spot instances are a good fit for builds&lt;/li&gt;
&lt;li&gt;How to setup spot instances with your terraform module&lt;/li&gt;
&lt;li&gt;Making Tekton run all jobs with those taints/affinity by default&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;why-spot-instances-are-a-good-fit-for-builds&#34;&gt;Why spot instances are a good fit for builds&lt;/h2&gt;
&lt;p&gt;Spot instances are the free resources your cloud provider are not using, this means you can use them for a reduced price at the cost of disruption to the service.&lt;/p&gt;
&lt;p&gt;Spot instances are ideal for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dev/Test environments&lt;/li&gt;
&lt;li&gt;CI/CD workloads&lt;/li&gt;
&lt;li&gt;High performance computing&lt;/li&gt;
&lt;li&gt;Batch processing jobs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&amp;rsquo;s a great way for us to save money on builds while ensuring you can give them enough resources to run quickly. It&amp;rsquo;s also a scalable to zero and doesn&amp;rsquo;t matter if you have to wait for a machine to be allocated.&lt;/p&gt;
&lt;h2 id=&#34;how-to-setup-spot-instances-with-your-terraform-module&#34;&gt;How to setup spot instances with your terraform module&lt;/h2&gt;
&lt;p&gt;Work has been completed on &lt;a href=&#34;https://github.com/jenkins-x/terraform-aws-eks-jx/pull/76&#34;&gt;AWS&lt;/a&gt; and &lt;a href=&#34;https://github.com/jenkins-x-terraform/terraform-jx-Azure/pull/23&#34;&gt;Azure&lt;/a&gt;, if someone would like to implement this on GCP (or another cloud provider), please join us in #jenkins-x-dev in slack.&lt;/p&gt;
&lt;h3 id=&#34;azure&#34;&gt;Azure&lt;/h3&gt;
&lt;p&gt;On Azure, there are a few parameters to configure to enable spot instances:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# This sets whether to use spot or standard nodes for the builds, so we&amp;#39;ll leave this as true
use_spot=true

# Sets the max price that you want to pay for your certain machine, if this is -1 that makes it so you&amp;#39;ll pay the current max price for spot
spot_max_price = -1

# Sets the type of vm you would like, if this isn&amp;#39;t specified, the build node pool won&amp;#39;t be created
build_node_size=&amp;#34;Standard_D4s_v3&amp;#34;

# The minimum count of nodes, for spot, you have to use 0
min_build_node_count = 0

# The maximum amount of nodes you&amp;#39;d like to have
max_build_node_count = 5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then run your:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;terraform plan&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;terraform apply&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;making-tekton-run-all-jobs-with-those-taintsaffinity-by-default&#34;&gt;Making Tekton run all jobs with those taints/affinity by default&lt;/h2&gt;
&lt;p&gt;As all the builds are handled by Tekton, we can use their strategy for applying defaults to pipelineActivities, which is done through a configmap in the tekton-pipelines namespace.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll want to add the toleration to the pod template, so that they&amp;rsquo;re able to be allocated to the new spot nodes that we&amp;rsquo;ve created.
If we want to ensure the builds are done on the nodes that we&amp;rsquo;ve created, without an option to be allocated to the other machines, we&amp;rsquo;ll also want to add an affinity.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I&amp;rsquo;m going to be showing this with the Azure examples, Azure by default adds a specific spot taint, so we&amp;rsquo;ll need to add that too.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;applying-the-helmfile-changes-to-the-gitops-repository&#34;&gt;Applying the helmfile changes to the gitops repository&lt;/h3&gt;
&lt;p&gt;The Tekton helm chart has a value override for config-defaults, we can apply this in the gitops repository helmfile by modifying:
&lt;code&gt;helmfiles/Tekton-pipelines/helmfile.yaml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Modify this entry:&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- chart: cdf/Tekton-pipeline
  version: 0.27.2
  name: Tekton-pipeline
  values:
  - ../../versionStream/charts/cdf/Tekton-pipeline/values.yaml.gotmpl
  - jx-values.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;To be:&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- chart: cdf/Tekton-pipeline
  version: 0.27.2
  name: Tekton-pipeline
  values:
  - ../../versionStream/charts/cdf/Tekton-pipeline/values.yaml.gotmpl
  - jx-values.yaml
  - Tekton-pipeline.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;We now need to create the Tekton-pipeline.yaml file within the same directory as the helmfile we&amp;rsquo;ve just created:&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;configDefaults:
  default-pod-template: |
    tolerations:
    - key: &amp;#34;sku&amp;#34;
      operator: &amp;#34;Equal&amp;#34;
      value: &amp;#34;build&amp;#34;
      effect: &amp;#34;NoSchedule&amp;#34;
    - key: &amp;#34;kubernetes.Azure.com/scalesetpriority&amp;#34;
      operator: &amp;#34;Equal&amp;#34;
      value: &amp;#34;spot&amp;#34;
      effect: &amp;#34;NoSchedule&amp;#34;
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: &amp;#34;agentpool&amp;#34;
              operator: &amp;#34;In&amp;#34;
              values: 
              - &amp;#34;buildnode&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here we can see that we&amp;rsquo;re adding 2 tolerations to make the pipeline activites allowed to be assigned to these nodes.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sku: build
kubernetes.Azure.com/scalesetpriority: spot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We&amp;rsquo;re also adding the affinity to specfically select the nodes with the label:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;agentpool: buildnode
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then if we apply this to the gitops repository, spot instances will start running your builds and saving you money!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Jenkins</title>
      <link>https://jenkins-x.io/v3/admin/guides/jenkins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/guides/jenkins/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/v3/guides/jx3/&#34;&gt;Jenkins X version 3 &lt;/a&gt; includes support for the interoperability of &lt;a href=&#34;https://jenkins.io&#34;&gt;Jenkins&lt;/a&gt;, &lt;a href=&#34;https://jenkins-x.io/v3/about/&#34;&gt;Jenkins X&lt;/a&gt; and &lt;a href=&#34;https://github.com/tektoncd/pipeline&#34;&gt;Tekton&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
